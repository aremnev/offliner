<?php

namespace Thumbtack\testBundle\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
/**
 * CV entity
 *
 * @ORM\Table(name="Cv")
 * @ORM\Entity()
 */
class Cv
{
    /**
     * CV id
     *
     * @var integer $id
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * CV title
     *
     * @var string $title
     * @Assert\NotBlank()
     * @ORM\Column(name="title", type="string", length=255)
     */
    private $title = '';

    /**
     *@var string $description
     *
     *@ORM\Column(name="description", type="string", length=255)
     */
    private $description ='';

    /**
     * Custom_info for post
     *
     * @var ArrayCollection
     * @ORM\ManyToMany(targetEntity="Section", inversedBy="cv")
     * @ORM\JoinTable(name="cv_sections",
     *      joinColumns={@ORM\JoinColumn(name="cv_id", referencedColumnName="id")},
     *      inverseJoinColumns={@ORM\JoinColumn(name="section_id", referencedColumnName="id")}
     *      )
     */
    private $sections;

    /**
     * Basic_info for post
     *
     * @var BasicInfo
     * @ORM\OneToOne(targetEntity="BasicInfo")
     * @ORM\JoinColumn(name="basic_info_id", referencedColumnName="id")
     */
    private $basic;

    /**
     * @var \DateTime $created
     *
     * @ORM\Column(type="datetime")
     */
    private $created = '';

    /**
     * @var string $shortLink
     *
     * @ORM\Column(name="shortLink", type="string", length = 255)
     */
    private $shortLink = '';

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->sections = new ArrayCollection();
    }
    
    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set title
     *
     * @param string $title
     * @return Cv
     */
    public function setTitle($title)
    {
        $this->title = $title;
    
        return $this;
    }

    /**
     * Get title
     *
     * @return string 
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     * Set description
     *
     * @param string $description
     * @return Cv
     */
    public function setDescription($description)
    {
        $this->description = $description;
    
        return $this;
    }

    /**
     * Get description
     *
     * @return string 
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Set created
     *
     * @param \DateTime $created
     * @return Cv
     */
    public function setCreated($created)
    {
        $this->created = $created;
    
        return $this;
    }

    /**
     * Get created
     *
     * @return \DateTime 
     */
    public function getCreated()
    {
        return $this->created;
    }

    /**
     * Set updated
     *
     * @param string $shortLink
     * @return Cv
     */
    public function setShortLink($shortLink)
    {
        $this->shortLink = $shortLink;
    
        return $this;
    }

    /**
     * Get updated
     *
     * @return string
     */
    public function getShortLink()
    {
        return $this->shortLink;
    }

    /**
     * Add customs
     *
     * @param \Thumbtack\testBundle\Entity\Section $sections
     * @return Cv
     */
    public function addSection(Section $sections)
    {
        $this->sections[] = $sections;
    
        return $this;
    }

    /**
     * Remove customs
     *
     * @param \Thumbtack\testBundle\Entity\Section $section
     */
    public function removeSection(Section $section)
    {
        $this->sections->removeElement($section);
    }

    /**
     * Get customs
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getSections()
    {
        return $this->sections;
    }

    /**
     * Set basic
     *
     * @param \Thumbtack\testBundle\Entity\BasicInfo $basic
     * @return Cv
     */
    public function setBasic(BasicInfo $basic = null)
    {
        $this->basic = $basic;
    
        return $this;
    }

    /**
     * Get basic
     *
     * @return \Thumbtack\testBundle\Entity\BasicInfo
     */
    public function getBasic()
    {
        return $this->basic;
    }

    public function getJson()
    {
        $res = array('id'=>$this->id, 'title'=>$this->title,'desc'=>$this->description,'created'=>$this->created, 'shortLink'=>$this->shortLink,
            'basic' => $this->basic->asArray(),'sections'=>$this->getSectionsJson());
        return json_encode($res);
    }
    private function getSectionsJson()
    {
        $res = array();
        foreach($this->sections as $section){
            array_push($res,$section->asArray(false)); //withData => false;
        }
        return $res;
    }
}